#!/usr/bin/env node
const { ArgumentParser } = require('argparse');
const sigv4  = require('./utils/sigv4');
const cognitoLogin=require('./utils/cognitoLogin');

const { version } = require('./package.json');

//Setup ArgParse to collect information like user/pass
const parser = new ArgumentParser({
    description: 'Vendia API Auth Example'
  });

parser.add_argument('-v', '--version', { action: 'version', version });
parser.add_argument('-u', '--username', { help: 'username (email)', required:true });
parser.add_argument('-p', '--password', { help: 'password',required:true });
parser.add_argument('-r', '--region', { help: 'region',default:'us-east-1'});
parser.add_argument('-i','--identitypool',{help:'Identity pool id',default:'us-east-1:1df563d6-c5ef-4bad-aa88-17e4df3ff324'});
parser.add_argument('--pool', { help: 'Cognito UserPool', default:'us-east-1_N7amGsOgA' });
parser.add_argument('--client', { help: 'Cognito Client ID', default:'7rcfp2gvcrb86fkig5k2mml23t' });

//Parese args
const args=parser.parse_args();

//Login with Cognito
cognitoLogin.Login(args.username,args.password,args.pool,args.client,args.region,args.identitypool)
    .then(async(creds)=>{

        //With creds present, Sigv4 signin a request like ListUnis
        //First define a query
        const data = JSON.stringify({
        query: `query ListUnis {
            listUnis(status: { not: [DESTROYING, DESTROYED] }) {
              unis {
                name
                status
              }
            }
          }
        `
        });

        //Create a signed POST
        let req=await sigv4.signRequest({
            credentials: {  accessKeyId:creds.accessKeyId,
                            secretAccessKey:creds.secretAccessKey,
                            sessionToken:creds.sessionToken
                         },
            host: 'share.services.vendia.net',
            region: 'us-east-1',
            method:'POST',
            baseURL:'https://share.services.vendia.net',
            body:data
        })('/share',{body:data}); // <- Note passing the query(named data) as the body property
        
        //Print the output
        console.log(JSON.stringify(req));
    })
    .catch((err)=>{
        //Catch errors and print as possible
        console.error("error")
        console.error(err.data?JSON.stringify(err.data):err);
    });
