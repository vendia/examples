AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Push data to Vendia Share from AWS Transfer (SFTP)

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Runtime: python3.8
    Tracing: Active

Parameters:
  ShareGraphqlUrl:
    Type: String
    Description: Enter the GraphQL URL value for the Shipper Uni node
  
  ShareGraphqlApiKey:
    Type: String
    Description: Enter the GraphQL API Key value for the Shipper Uni node

  SftpUsername:
    Type: String
    Description: SFTP username
    Default: sftp-to-share
    AllowedPattern: ^[\w][\w@.-]{2,99}$
  
  SftpUserPublicKey:
    Type: String
    Description: SSH public key used by SftpUsername for authentication

Resources:
  # The next several resources are dedicated to setting up the SFTP server
  # with the friendly hostname
  SftpServer:
    Type: AWS::Transfer::Server
    Properties:
      EndpointType: PUBLIC

  SftpBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub sftp-to-share-${AWS::AccountId}
      
  SftpUserRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - transfer.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: S3FullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                  - s3:GetBucketLocation
                Resource: "*"
        - PolicyName: AllowListingOfUserFolder
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: !GetAtt SftpBucket.Arn
        - PolicyName: HomeDirObjectAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:DeleteObject
                  - s3:DeleteObjectVersion
                Resource: !Sub "${SftpBucket.Arn}/*"

  SftpUser:
    Type: AWS::Transfer::User
    Properties:
      ServerId: !GetAtt SftpServer.ServerId
      UserName: !Ref SftpUsername
      HomeDirectory: !Sub "/${SftpBucket}/home/${SftpUsername}"
      Policy: > 
          {
            "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "AllowListingOfUserFolder",
                            "Effect": "Allow",
                            "Action": "s3:ListBucket",
                            "Resource": "arn:aws:s3:::${transfer:HomeBucket}",
                            "Condition": {
                                "StringLike": {
                                    "s3:prefix": [
                                        "home/${transfer:UserName}/*",
                                        "home/${transfer:UserName}"
                                    ]
                                }
                            }
                        },
                        {
                            "Sid": "HomeDirObjectAccess",
                            "Effect": "Allow",
                            "Action": [
                                "s3:PutObject",
                                "s3:GetObject",
                                "s3:GetObjectVersion",
                                "s3:DeleteObject",
                                "s3:DeleteObjectVersion"
                            ],
                            "Resource": "arn:aws:s3:::${transfer:HomeDirectory}*"
                        }
                    ]
            }
      Role: !GetAtt SftpUserRole.Arn
      SshPublicKeys:
        - !Ref SftpUserPublicKey

  # The next several resources are dedicated to having Lambda parse
  # CSV files and upload them to the Vendia Share Uni
  CsvParserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/csv_parser/
      Handler: index.lambda_handler
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: sftp-to-share
          SHARE_NODE_URL: !Ref ShareGraphqlUrl
          SHARE_NODE_API_KEY: !Ref ShareGraphqlApiKey
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectVersion
                - s3:PutObject
                - s3:HeadObject
              Resource: 
                - !Sub 'arn:aws:s3:::sftp-to-share-${AWS::AccountId}/*'
            - Effect: Allow
              Action:
                - s3:ListBucket
              Resource: 
                - !Sub 'arn:aws:s3:::sftp-to-share-${AWS::AccountId}'
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
                - xray:GetSamplingRules
                - xray:GetSamplingTargets
                - xray:GetSamplingStatisticSummaries
              Resource: '*'
      Events:
        ProcessAttachment:
          Type: S3 # More info about S3 Event Source: https://github.com/aws/serverless-application-model/blob/develop/versions/2016-10-31.md#s3
          Properties:
            Bucket: !Ref SftpBucket
            Events: s3:ObjectCreated:*

  CsvParserFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CsvParserFunction}
      RetentionInDays: 14

Outputs:
  SftpCommand:
    Value: !Sub sftp ${SftpUsername}@${SftpServer.ServerId}.server.transfer.${AWS::Region}.amazonaws.com
